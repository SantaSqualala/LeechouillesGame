//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Settings/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""PlayerInputs"",
            ""id"": ""a1dc110a-6153-4d8e-94df-75a0b35746ec"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ab516ec1-78e1-4223-8427-dc080510f451"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2b08eed3-8fd1-432d-b05f-1d5615e01479"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionL"",
                    ""type"": ""Button"",
                    ""id"": ""75bd71ce-12aa-433a-987d-d19fa259f6d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionR"",
                    ""type"": ""Button"",
                    ""id"": ""6c7cb2e3-04b2-4ea4-a2cf-9d95ee4f1562"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0fe5f467-685f-458c-bf1a-48e2d92a0529"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActionL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43c0e65c-d605-465a-9613-5a0aeb17d0d2"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActionL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a14da506-fa6f-4b88-a716-4e2d83fdba0b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActionR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""baac34ce-2a3b-4cb3-ae88-73ff591e166d"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActionR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""2647e5e5-7c3d-477b-9d75-bf0ae30f320d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5d9d0b37-c479-413a-bac9-4f4290140658"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""666e6222-5628-45ac-83c0-45216c9ac0f2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""90a9579c-0343-4642-96e0-6ec1dddba521"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""88e9c751-796d-4ee0-bf14-4bb33b884cd7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c723e459-0932-4d6b-9432-2cbf9e03c6ea"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0709d6bf-d77e-411c-805f-71845283fe5c"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0843185e-b610-473b-ac87-8eb241d05919"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""HunterInputs"",
            ""id"": ""f19e04bf-36db-4ea8-98ab-0a57097e2f14"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ec08db01-4890-4669-ab97-5789c7fb3e7f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b5618cb3-5b08-4859-8cf3-1d38d8074703"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionL"",
                    ""type"": ""Button"",
                    ""id"": ""9c5900fd-f43e-465b-a56f-45bab173c7d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionR"",
                    ""type"": ""Button"",
                    ""id"": ""18ef5ef0-323f-4f48-b69e-f6201de45e87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3544c207-9377-40bf-ae76-e7e666c52ba2"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActionL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12354466-1577-49ab-b0bd-3c1c08ef82ed"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActionL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c385a9ed-ca19-40d6-bea9-68022ff57b79"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActionR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""235892ce-cbc9-4244-925f-58367e5507a7"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActionR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""03cc0a90-535b-4fb0-83b6-457b75350658"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""be6916f4-af93-4e68-842d-163939697a5c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""12eaee33-7f2f-4f8e-9180-030a9c0811d1"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dfe3c277-31e1-4085-8a46-1ab40d94ceba"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""69dfbb09-cef0-4d67-b952-8d0ca9c5909b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b5c681fb-629e-4d6d-961c-30c60f28fad8"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9af3fda4-664c-4eff-b4d3-9197b1cf9baf"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fd7f335-a1a9-4007-9ea9-1875bee3cf11"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""AlienInputs"",
            ""id"": ""00e270b0-09d9-4ab5-969e-801015e60893"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1baf4eba-269c-4dd8-9265-0cdd4854b245"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2510ca1a-687c-4b56-8408-defcd3efd9fe"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionL"",
                    ""type"": ""Button"",
                    ""id"": ""0ab58ce6-7d00-4005-9c5c-0f59d4169fe7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ActionR"",
                    ""type"": ""Button"",
                    ""id"": ""eb3b7a4a-7814-4904-ba2e-5c88d11177d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d30bef09-0e7f-48f0-a4c1-6516b90a4ebd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActionL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03510858-6e3f-478b-97b0-8ac3eba7aed1"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActionL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""425567e6-048e-41bf-8a4d-471f9eaa00ef"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ActionR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8dff084-7c70-4537-8d2e-b8e66d892e0c"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ActionR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""150aaf90-7391-45d6-98d7-f9f70506039d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ac379a95-402c-45c2-88b5-393029e935b7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a599e928-11d6-433e-be46-160998ed4400"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""48ad8856-3a05-450b-9372-396681e021f8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4c3300ec-fc40-495d-876e-ee3156acdaff"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9a07643f-8bc9-4b07-ad9e-918e6bef514b"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""366ddaf1-e7d4-43cd-bc33-b4e4667f08d6"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85fea498-5766-4a33-b72a-1552f6f497b3"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerInputs
        m_PlayerInputs = asset.FindActionMap("PlayerInputs", throwIfNotFound: true);
        m_PlayerInputs_Movement = m_PlayerInputs.FindAction("Movement", throwIfNotFound: true);
        m_PlayerInputs_Look = m_PlayerInputs.FindAction("Look", throwIfNotFound: true);
        m_PlayerInputs_ActionL = m_PlayerInputs.FindAction("ActionL", throwIfNotFound: true);
        m_PlayerInputs_ActionR = m_PlayerInputs.FindAction("ActionR", throwIfNotFound: true);
        // HunterInputs
        m_HunterInputs = asset.FindActionMap("HunterInputs", throwIfNotFound: true);
        m_HunterInputs_Movement = m_HunterInputs.FindAction("Movement", throwIfNotFound: true);
        m_HunterInputs_Look = m_HunterInputs.FindAction("Look", throwIfNotFound: true);
        m_HunterInputs_ActionL = m_HunterInputs.FindAction("ActionL", throwIfNotFound: true);
        m_HunterInputs_ActionR = m_HunterInputs.FindAction("ActionR", throwIfNotFound: true);
        // AlienInputs
        m_AlienInputs = asset.FindActionMap("AlienInputs", throwIfNotFound: true);
        m_AlienInputs_Movement = m_AlienInputs.FindAction("Movement", throwIfNotFound: true);
        m_AlienInputs_Look = m_AlienInputs.FindAction("Look", throwIfNotFound: true);
        m_AlienInputs_ActionL = m_AlienInputs.FindAction("ActionL", throwIfNotFound: true);
        m_AlienInputs_ActionR = m_AlienInputs.FindAction("ActionR", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerInputs
    private readonly InputActionMap m_PlayerInputs;
    private IPlayerInputsActions m_PlayerInputsActionsCallbackInterface;
    private readonly InputAction m_PlayerInputs_Movement;
    private readonly InputAction m_PlayerInputs_Look;
    private readonly InputAction m_PlayerInputs_ActionL;
    private readonly InputAction m_PlayerInputs_ActionR;
    public struct PlayerInputsActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerInputsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerInputs_Movement;
        public InputAction @Look => m_Wrapper.m_PlayerInputs_Look;
        public InputAction @ActionL => m_Wrapper.m_PlayerInputs_ActionL;
        public InputAction @ActionR => m_Wrapper.m_PlayerInputs_ActionR;
        public InputActionMap Get() { return m_Wrapper.m_PlayerInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerInputsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerInputsActions instance)
        {
            if (m_Wrapper.m_PlayerInputsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnMovement;
                @Look.started -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnLook;
                @ActionL.started -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnActionL;
                @ActionL.performed -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnActionL;
                @ActionL.canceled -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnActionL;
                @ActionR.started -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnActionR;
                @ActionR.performed -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnActionR;
                @ActionR.canceled -= m_Wrapper.m_PlayerInputsActionsCallbackInterface.OnActionR;
            }
            m_Wrapper.m_PlayerInputsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @ActionL.started += instance.OnActionL;
                @ActionL.performed += instance.OnActionL;
                @ActionL.canceled += instance.OnActionL;
                @ActionR.started += instance.OnActionR;
                @ActionR.performed += instance.OnActionR;
                @ActionR.canceled += instance.OnActionR;
            }
        }
    }
    public PlayerInputsActions @PlayerInputs => new PlayerInputsActions(this);

    // HunterInputs
    private readonly InputActionMap m_HunterInputs;
    private IHunterInputsActions m_HunterInputsActionsCallbackInterface;
    private readonly InputAction m_HunterInputs_Movement;
    private readonly InputAction m_HunterInputs_Look;
    private readonly InputAction m_HunterInputs_ActionL;
    private readonly InputAction m_HunterInputs_ActionR;
    public struct HunterInputsActions
    {
        private @PlayerControls m_Wrapper;
        public HunterInputsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_HunterInputs_Movement;
        public InputAction @Look => m_Wrapper.m_HunterInputs_Look;
        public InputAction @ActionL => m_Wrapper.m_HunterInputs_ActionL;
        public InputAction @ActionR => m_Wrapper.m_HunterInputs_ActionR;
        public InputActionMap Get() { return m_Wrapper.m_HunterInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HunterInputsActions set) { return set.Get(); }
        public void SetCallbacks(IHunterInputsActions instance)
        {
            if (m_Wrapper.m_HunterInputsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnMovement;
                @Look.started -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnLook;
                @ActionL.started -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnActionL;
                @ActionL.performed -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnActionL;
                @ActionL.canceled -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnActionL;
                @ActionR.started -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnActionR;
                @ActionR.performed -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnActionR;
                @ActionR.canceled -= m_Wrapper.m_HunterInputsActionsCallbackInterface.OnActionR;
            }
            m_Wrapper.m_HunterInputsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @ActionL.started += instance.OnActionL;
                @ActionL.performed += instance.OnActionL;
                @ActionL.canceled += instance.OnActionL;
                @ActionR.started += instance.OnActionR;
                @ActionR.performed += instance.OnActionR;
                @ActionR.canceled += instance.OnActionR;
            }
        }
    }
    public HunterInputsActions @HunterInputs => new HunterInputsActions(this);

    // AlienInputs
    private readonly InputActionMap m_AlienInputs;
    private IAlienInputsActions m_AlienInputsActionsCallbackInterface;
    private readonly InputAction m_AlienInputs_Movement;
    private readonly InputAction m_AlienInputs_Look;
    private readonly InputAction m_AlienInputs_ActionL;
    private readonly InputAction m_AlienInputs_ActionR;
    public struct AlienInputsActions
    {
        private @PlayerControls m_Wrapper;
        public AlienInputsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_AlienInputs_Movement;
        public InputAction @Look => m_Wrapper.m_AlienInputs_Look;
        public InputAction @ActionL => m_Wrapper.m_AlienInputs_ActionL;
        public InputAction @ActionR => m_Wrapper.m_AlienInputs_ActionR;
        public InputActionMap Get() { return m_Wrapper.m_AlienInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AlienInputsActions set) { return set.Get(); }
        public void SetCallbacks(IAlienInputsActions instance)
        {
            if (m_Wrapper.m_AlienInputsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnMovement;
                @Look.started -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnLook;
                @ActionL.started -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnActionL;
                @ActionL.performed -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnActionL;
                @ActionL.canceled -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnActionL;
                @ActionR.started -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnActionR;
                @ActionR.performed -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnActionR;
                @ActionR.canceled -= m_Wrapper.m_AlienInputsActionsCallbackInterface.OnActionR;
            }
            m_Wrapper.m_AlienInputsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @ActionL.started += instance.OnActionL;
                @ActionL.performed += instance.OnActionL;
                @ActionL.canceled += instance.OnActionL;
                @ActionR.started += instance.OnActionR;
                @ActionR.performed += instance.OnActionR;
                @ActionR.canceled += instance.OnActionR;
            }
        }
    }
    public AlienInputsActions @AlienInputs => new AlienInputsActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerInputsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnActionL(InputAction.CallbackContext context);
        void OnActionR(InputAction.CallbackContext context);
    }
    public interface IHunterInputsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnActionL(InputAction.CallbackContext context);
        void OnActionR(InputAction.CallbackContext context);
    }
    public interface IAlienInputsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnActionL(InputAction.CallbackContext context);
        void OnActionR(InputAction.CallbackContext context);
    }
}
